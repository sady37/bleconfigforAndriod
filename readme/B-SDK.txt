	
Android WiFi Config SDK Description
V1.0

Author: WANG YONG
2018/01/29

Modification Record
Date	Item	Person
2018-01-29	File created	WangYong
2024-03-14	Optimize code, compatible with multiple device networks	WangYong
		
		
		
		
		
		
		
		
Confidential & For Internal Use Only
 

Contents

Modification Record	1
Contents	2
I. APP Android SDK	4
1. Functions and Objectives	4
II. Development Preparation	4
1 .SDK Release Library	4
2 .Development Environment Settings	4
Eclipse project configuration method	4
III. API Description	6
1.Initialize Tool Class	6
Interface Description	6
Parameters Description	6
2. Configure the device in AP mode	6
Interface Description	6
Parameters Description	6
3.Configure the device in BLE mode	7
Interface Description	7
Parameters Description	7
IV. Object Description	8
StatusCode	8
Class Description	8
FieldDescription	8
IResultCallback<T>	8
Class Description	8
Method Description	8
CallbackData<T>	8
Class Description	8
FieldDescription	9
DeviceInfo	9
Class Description	9
FieldDescription	9

I. APP Android SDK
1.	Functions and Objectives
Sleepace Android SDK is a software development toolkit launched by Sleepace, aiming to conduct fast development for Internet of Things APP on the Android platform. The SDK encapsulates the communication process between the APP and the hardware, and provides functions such as device configuration, device control, and data query. Using this SDK, users do not need to care about complex communication protocol and the underlying implementation, only need to focus on APP interactions and business levels.
II. Development Preparation
1 .SDK Release Library

Package Name	Description
sdkcore.jar	SDK Core Package
wificonfigsdk.jar	Device Configuration Package

2 .Development Environment Settings
There are many Android development tools. Here we introduce the configuration method of Sleepace SDK with Eclipse. Other development tools are similar.
Eclipse project configuration method
Step 1: Create a new libs folder in the project, and copy the sdkcore.jar and wificonfigsdk.jar in the development package to the root directory of libs. The project directory after copying is shown in the following 
 
Step 2 is to configure the relevant permissions in the AndroidManifest.xml file
The configure permissions of Ap mode：
<uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
The configure permissions of BLE mode：
<uses-permission android:name="android.permission.BLUETOOTH"/>
<uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
<uses-feature android:name="android.hardware.bluetooth_le" android:required="true"/>
After the above operations, you can normally use all the functions provided by Sleepace SDK.












III. API Description
1.Initialize Tool Class
WiFiConfigHelper.getInstance(Context mContext);
Interface Description
Instantiation tool class
Parameters Description
Field	Type	Description
mContext	Context	Context object

2.Configure the device in AP mode
public void apWiFiConfig(short deviceType, String address, int port, byte[] ssidRaw, String pwd, IResultCallback callback)
Interface Description
Configure the device in AP mode
Parameters Description
Field	Type	Description
deviceType	Short	Device type provided by Sleepace
address	String	Server address
When the device type is 26 (Z4TWB), the server address is an http address, when the device type is 27 (Z4TWP), the server address is an IP address.
port	Int	Server port
When the device type is 26 (Z4TWB), the port is meaningless, pass 0, when the device type is 27 (Z4TWP), you need to pass in the open port of the server.
ssidRaw	byte[]	The WiFi name that the device needs to connect to. The byte array is passed here to be compatible with Chinese ssid names. For detailed usage, please refer to the demo
pwd	String	WiFi password, it can be empty
callback	IResultCallback<DeviceInfo>	Callback interface，return to see:DeviceInfo

3.Configure the device in BLE mode
public void bleWiFiConfig(short deviceType, String btAddress, String serverIP, int serverPort, byte[] ssidRaw, String pwd, 
			IResultCallback callback) 
Interface Description
Configure the device in BLE mode
Parameters Description
Field	Type	Description
deviceType	Short	Device type provided by Sleepace
btAddress	String	BLE device address
serverIP	String	Server IP which the device want to connect
serverPort	Int	Server Port which the device want to connect
ssidRaw	byte[]	The WiFi name that the device needs to connect to. The byte array is passed here to be compatible with Chinese ssid names. For detailed usage, please refer to the demo
pwd	String	WiFi password, it can be empty
callback	IResultCallback<DeviceInfo>	Callback interface，return to see: DeviceInfo


IV. Object Description
StatusCode
Class Description
Interface call status constant
FieldDescription
Field	Type	值	Description
STATUS_SUCCESS	int	0x00	Succeed
STATUS_FAILED	int	0x01	Failed
STATUS_TIMEOUT	int	0x02	timeout
STATUS_DISCONNECT	int	0x03	Disconnect
STATUS_BLUETOOTH_NOT_OPEN	int	0x04	BLE is not opened
STATUS_PARAMETER_ERROR	int	0x05	parameter error

IResultCallback<T>
Class Description
Callback interface
Method Description
 void onResultCallback(CallbackData<T> cd)

  Execution result callback method
CallbackData<T>
Class Description
Callback result class
FieldDescription
Field	Type	Description
status	Int	Status code, used to analyze the status of the result. For details, please see: StatusCode class
callbackType	String	Interface type, used to distinguish which operation interface the returned result belongs to
result	T	Return result object, generic, depending on the interface
DeviceInfo
Class Description
Device information returned when the device is successfully configured
FieldDescription
Field	Type	Description
version	String	Device version
deviceId	String	Device ID

